plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.2.1'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.quickstore'
    version '1.0-SNAPSHOT'
    sourceCompatibility = '17'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
        maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
    }

    ext {
        set('springCloudVersion', "2021.0.5")
        set('testcontainersVersion', "1.17.6")
    }

    dependencyManagement {
        imports {
            mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }
}

jibDockerBuild.enabled = false

subprojects {
    apply plugin: 'com.google.cloud.tools.jib'
    jib {
        from {
            image = 'eclipse-temurin:17.0.4.1_1-jre'
            auth {
                username = property('dockerHubUsername')
                password = property('dockerHubPassword')
            }
        }
        to {
            image = "devnoop/${project.name}"
            auth {
                username = property('dockerHubUsername')
                password = property('dockerHubPassword')
            }
        }

//Specifying the main class for each subproject
        if(project.name == 'api-gateway'){
            container{
                mainClass = 'com.quickstore.ApiGatewayApplication'
            }
        } else if(project.name == 'discovery-server'){
            container{
                mainClass = 'com.quickstore.discoveryserver.DiscoveryServerApplication'
            }
        } else if(project.name == 'inventory-service'){
            container{
                mainClass = 'com.quickstore.inventoryservice.InventoryServiceApplication'
            }
        } else if(project.name == 'product-service'){
            container{
                mainClass = 'com.quickstore.productservice.ProductServiceApplication'
            }
        } else if(project.name == 'order-service'){
            container{
                mainClass = 'com.quickstore.orderservice.OrderServiceApplication'
            }
        } else if(project.name == 'notification-service'){
            container{
                mainClass = 'com.quickstore.notificationservice.NotificationServiceApplication'
            }
        }
    }
}